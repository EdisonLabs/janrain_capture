<?php

/**
 * @file
 * Uninstall functions for the janrain_capture module
 */

/**
 * Implements hook_schema().
 */
function janrain_capture_schema() {
  $schema['janrain_capture_photos'] = array(
    'description' => 'Maps users to previously saved photo from Capture.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: {users}.uid for user.',
      ),
      'uri' => array(
        'description' => 'The URI used to fetch the file.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'binary' => TRUE,
      ),
    ),
    'primary key' => array('uid'),
    'foreign keys' => array(
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );
  return $schema;
}

/**
 * Programatically create a field (field_janrain_capture_uuid) on the User entity
 */
function janrain_capture_create_field() {
  // Check if our field is not already created.
  if (!field_info_field('field_janrain_capture_uuid')) {
    $field = array(
      'field_name' => 'field_janrain_capture_uuid',
      'type' => 'text',
      'translatable' => FALSE,
      'settings' => array(
        'max_length' => '255',
      ),
      'field_permissions' => array(
        'type' => '2',
      ),
    );
    field_create_field($field);

    // Create the instance on the bundle.
    $instance = array(
      'field_name' => 'field_janrain_capture_uuid',
      'entity_type' => 'user',
      'label' => 'Janrain Capture uuid',
      'bundle' => 'user',
      'required' => FALSE,
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => 0,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => '3',
        ),
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'size' => '60',
        ),
        'type' => 'text_textfield',
        'weight' => '2',
      ),
    );
    field_create_instance($instance);
  }
}

/**
 * Implements hook_install().
 */
function janrain_capture_install() {
  // Create the UUID field.
  janrain_capture_create_field();

  // Set the default janrain_capture_screens_folder setting
  variable_set('janrain_capture_screens_folder', 'file:///sites/all/themes/janrain-capture-screens/');

  // Set the default version
  variable_set('janrain_capture_ver', JANRAIN_CAPTURE_VERSION_DEFAULT);
}

/**
 * Implements hook_uninstall().
 */
function janrain_capture_uninstall() {
  variable_del('janrain_capture_main');
  variable_del('janrain_capture_optional');
  variable_del('janrain_capture_fields');
  variable_del('janrain_capture_enforce');
  db_delete('variable')
    ->condition(db_or()
      ->condition('name', "janrain_capture_share%", 'LIKE'))
    ->execute();
}

/**
 * Update users, change name to janrain_capture_uuid.
 */
function janrain_capture_update_7001(&$sandbox) {
  $query = db_select('users', 'u')
    ->fields('u', array('uid'));
  $query->innerJoin('field_data_field_janrain_capture_uuid', 'j', 'j.entity_id = u.uid');
  $users = $query->condition('j.entity_type ', 'user')
    ->condition('j.bundle', 'user')
    ->execute()
    ->fetchAll();

  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['limit'] = 5;
    $sandbox['max'] = count($users);
  }

  $chunk = array_slice($users, $sandbox['progress'], $sandbox['limit']);
  if (!empty($chunk)) {
    foreach ($chunk as $key => $user) {
      $user = user_load($user->uid);
      if (!empty($user->field_janrain_capture_uuid[LANGUAGE_NONE][0]['value'])
        && $user->name !== $user->field_janrain_capture_uuid[LANGUAGE_NONE][0]['value']) {
        $user->name = $user->field_janrain_capture_uuid[LANGUAGE_NONE][0]['value'];
        user_save($user);
      }
      $sandbox['progress']++;
    }
  }

  $sandbox['#finished'] = ($sandbox['progress'] / $sandbox['max']);
}

/**
 * Update janrain mapping so capture uuid corresponds to drupal name.
 */
function janrain_capture_update_7002() {
  module_load_include('inc', 'janrain_capture_mapping', 'janrain_capture_mapping.admin');
  $capture_field_options = janrain_capture_mapping_get_capture_field_options();
  $capture_field_options = array_flip($capture_field_options);
  $uuid_key = $capture_field_options['UUID'];
  $map = variable_get('janrain_capture_mapping_map', array());
  $flag = FALSE;
  foreach ($map as $key => $item) {
    if ($item['field'] == 'name') {
      $flag = $key;
    }
  }
  if ($flag === FALSE) {
    $map[] = array(
      'fid' => $uuid_key,
      'field' => 'name',
      'column' => 'value'
    );
  }
  else {
    $map[$flag]['fid'] = $uuid_key;
  }
  variable_set('janrain_capture_mapping_map', $map);
}
